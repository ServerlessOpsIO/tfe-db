AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  tfe-db

  Database for RFE


Parameters:
  Domain:
    Type: String
    Description: 'Name of Domain'

  System:
    Type: String
    Description: "Name of System"

  Component:
    Type: String
    Description: "Name of Component"

  CodeBranch:
    Type: String
    Description: "Name of GitHub Branch"

  DbFamily:
    Type: String
    Description: "DB family"

  DbEngine:
    Type: String
    Description: "DB engine"

  DbEngineVersion:
    Type: String
    Description: "DB engine version"

  DbName:
    Type: String
    Description: "Name of initial database to create on new cluster"


  DbUsername:
    Type: String
    Description: "DB username"
    Default: postgres

  DbPort:
    Type: String
    Description: "DB port"

  RdsScalingMinCapacity:
    Type: Number
    Description: "RDS scaling min capacity"

  RdsScalingMaxCapacity:
    Type: Number
    Description: "RDS scaling max capacity"

  RdsBackupRetentionPeriod:
    Type: Number
    Description: "Number of days to retain backups"

  RdsPreferredBackupWindow:
    Type: String
    Description: "Preferred daily time range for backups"

  RdsPreferredMaintenanceWindow:
    Type: String
    Description: "Preferred weekly time range for maintenance"

  RdsEnableHA:
    Type: String
    Description: Enable high availability for RDS; creates additional DB instances in cluster.
    AllowedValues:
      - "true"
      - "false"




  VpcId:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Account VPC ID

  VpcSubnets:
    Type: AWS::SSM::Parameter::Value<CommaDelimitedList>
    Description: Account subnets (private)


Conditions:
  IsRdsEnableHA: !Equals [!Ref RdsEnableHA, "true"]


Resources:
  ########
  # RDS
  ########

  ## Admin Password
  RdsDbAdminPassword:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: RDS Admin Password
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DbUsername}"}'
        GenerateStringKey: 'password'
        PasswordLength: 64
        ExcludePunctuation: true


  ## DB Cluster
  RdsDbClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: Aurora Postgresql Cluster Parameter Group
      Family: !Ref DbFamily
      Parameters:
        rds.force_ssl: 1
        log_connections: true
        log_disconnections: true

  RdsDbCluster:
    Type: AWS::RDS::DBCluster
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Properties:
      Engine: !Ref DbEngine
      EngineVersion: !Ref DbEngineVersion
      Port: !Ref DbPort

      DatabaseName: !Ref DbName

      DBClusterParameterGroupName: !Ref RdsDbClusterParameterGroup
      DBSubnetGroupName: !Ref RdsDbSubnetGroup
      VpcSecurityGroupIds:
        - !Ref RdsSecurityGroup
      DeletionProtection: false
      MasterUsername: !Ref DbUsername
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref RdsDbAdminPassword, ':SecretString:password}}' ]]
      UseLatestRestorableTime: true
      ServerlessV2ScalingConfiguration:
        MaxCapacity: !Ref RdsScalingMaxCapacity
        MinCapacity: !Ref RdsScalingMinCapacity
        # NOTE: Extend timeout for services with more stringent SLOs.
        #SecondsUntilAutoPause: 300   # 5m; default
      KmsKeyId: alias/aws/rds
      StorageEncrypted: true
      EnableCloudwatchLogsExports:
        - postgresql
      BackupRetentionPeriod: !Ref RdsBackupRetentionPeriod
      PreferredBackupWindow: !Ref RdsPreferredBackupWindow
      PreferredMaintenanceWindow: !Ref RdsPreferredMaintenanceWindow
      CopyTagsToSnapshot: true


  # DB insatnces
  RdsDbInstance0:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.serverless
      DBClusterIdentifier: !Ref RdsDbCluster
      Engine: aurora-postgresql

  RdsDbInstance1:
    Type: AWS::RDS::DBInstance
    Condition: IsRdsEnableHA
    Properties:
      DBInstanceClass: db.serverless
      DBClusterIdentifier: !Ref RdsDbCluster
      Engine: aurora-postgresql

  RdsDbInstance2:
    Type: AWS::RDS::DBInstance
    Condition: IsRdsEnableHA
    Properties:
      DBInstanceClass: db.serverless
      DBClusterIdentifier: !Ref RdsDbCluster
      Engine: aurora-postgresql


  # DB Networking
  RdsDbSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: !Sub '${AWS::StackName} Subnet Group'
      SubnetIds: !Ref VpcSubnets

  RdsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub '${AWS::StackName} Security Group'
      VpcId: !Ref VpcId


  # SSM Values
  RdsDbClusterNameSsmParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: Name of RDS cluster
      Name: !Sub /${Domain}/${System}/${Component}/${CodeBranch}/RdsDbClusterName
      Value: !Ref RdsDbCluster

  RdsDbClusterHostSsmParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: Hostname of R/W DB endpoint
      Name: !Sub /${Domain}/${System}/${Component}/${CodeBranch}/RdsDbClusterHost
      Value: !GetAtt RdsDbCluster.Endpoint.Address

  RdsDbClusterROHostSsmParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: DB endpoint port
      Name: !Sub /${Domain}/${System}/${Component}/${CodeBranch}/RdsDbClusterROHost
      Value: !GetAtt RdsDbCluster.ReadEndpoint.Address

  RdsDbClusterPortSsmParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: Hostname of read-only DB endpoint
      Name: !Sub /${Domain}/${System}/${Component}/${CodeBranch}/RdsDbClusterPort
      Value: !GetAtt RdsDbCluster.Endpoint.Port

  RdsDbAdminUsernameSsmParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: RDS Admin Username
      Name: !Sub /${Domain}/${System}/${Component}/${CodeBranch}/RdsDbAdminUsername
      Value: !Ref DbUsername

  RdsDbAdminPasswordSsmParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: RDS Admin Password
      Name: !Sub /${Domain}/${System}/${Component}/${CodeBranch}/RdsDbAdminPassword
      Value: !Ref RdsDbAdminPassword

  RdsSecurityGroupIdSsmParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Description: Security Group ID of RDS
      Name: !Sub /${Domain}/${System}/${Component}/${CodeBranch}/RdsSecurityGroupId
      Value: !Ref RdsSecurityGroup